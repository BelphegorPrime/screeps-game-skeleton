{"version":3,"sources":["role.loader.ts"],"names":["output","require","settings","getSettingsForLevel","routerHelper","roleLoader","run","creep","carry","energy","carryCapacity","Memory","enemys","room","name","energyAvailable","energyCapacityAvailable","container","pos","findClosestByRange","FIND_STRUCTURES","filter","structure","structureType","store","RESOURCE_ENERGY","storeCapacity","transfer","ERR_NOT_IN_RANGE","routeCreep","visualizePathStyle","stroke","tower","energyCapacity","upgradeController","controller","target","STRUCTURE_EXTENSION","STRUCTURE_SPAWN","memory","source","undefined","withdraw","harvest","fallbackSource","FIND_SOURCES","getNumberOfLoader","structures","find","generalSettings","costs","little","_","size","maxLoader","module","exports"],"mappings":"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","file":"role.loader.js","sourcesContent":["let output = require('./output')\r\nlet settings = require('./settings').getSettingsForLevel()\r\nlet routerHelper = require('./router')\r\nlet roleLoader = {\r\n\r\n    run: (creep:Creep) =>{\r\n        if(creep.carry.energy === creep.carryCapacity || creep.carry.energy >= 50) {\r\n            if(Memory.enemys[creep.room.name] <= 0 && creep.room.energyAvailable === creep.room.energyCapacityAvailable) {\r\n                let container = creep.pos.findClosestByRange(FIND_STRUCTURES, {\r\n                    filter: (structure:Container|Structure) => {\r\n                        return structure.structureType === \"container\" && structure.store[RESOURCE_ENERGY] < structure.storeCapacity\r\n                    }\r\n                })\r\n                if(container !== null) {\r\n                    if(creep.transfer(container, RESOURCE_ENERGY) === ERR_NOT_IN_RANGE) {\r\n                        routerHelper.routeCreep(creep, container, {visualizePathStyle: {stroke: '#ffffff'}})\r\n                    }\r\n                }\r\n            }\r\n            let tower = creep.pos.findClosestByRange(FIND_STRUCTURES, {\r\n                filter: (structure:Tower|Structure) => {\r\n                    return (structure.structureType === \"tower\") &&\r\n                        (structure.energy < structure.energyCapacity)\r\n                }\r\n            })\r\n            if(tower!==null) {\r\n                if(creep.transfer(tower, RESOURCE_ENERGY) === ERR_NOT_IN_RANGE) {\r\n                    routerHelper.routeCreep(creep, tower, {visualizePathStyle: {stroke: '#ffffff'}})\r\n                }\r\n            }else {\r\n                if(creep.room.energyAvailable === creep.room.energyCapacityAvailable){\r\n                    if(creep.upgradeController(creep.room.controller) === ERR_NOT_IN_RANGE) {\r\n                        routerHelper.routeCreep(creep, creep.room.controller, {visualizePathStyle: {stroke: '#ffffff'}})\r\n                    }\r\n                }else{\r\n                    let target = creep.pos.findClosestByRange(FIND_STRUCTURES, {\r\n                        filter: (structure:Extension|Spawn|Structure) => {\r\n                            return (structure.structureType === STRUCTURE_EXTENSION ||\r\n                                structure.structureType === STRUCTURE_SPAWN) &&\r\n                                (structure.energy < structure.energyCapacity)\r\n                        }\r\n                    })\r\n                    if(target!==null){\r\n                        if(creep.transfer(target, RESOURCE_ENERGY) === ERR_NOT_IN_RANGE) {\r\n                            routerHelper.routeCreep(creep, target, {visualizePathStyle: {stroke: '#ffffff'}})\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if(creep.memory.source !== undefined){\r\n                if(creep.memory.source.structureType === \"container\"){\r\n                    if(creep.memory.source.store.energy > 0){\r\n                        if(creep.withdraw(creep.memory.source, RESOURCE_ENERGY) === ERR_NOT_IN_RANGE) {\r\n                            routerHelper.routeCreep(creep, creep.memory.source, {visualizePathStyle: {stroke: '#ffaa00'}})\r\n                        }\r\n                    }else{\r\n                        if(creep.harvest(creep.memory.fallbackSource) === ERR_NOT_IN_RANGE) {\r\n                            routerHelper.routeCreep(creep, creep.memory.fallbackSource, {visualizePathStyle: {stroke: '#ffaa00'}})\r\n                        }\r\n                    }\r\n                }else{\r\n                    if(creep.harvest(creep.memory.source) === ERR_NOT_IN_RANGE) {\r\n                        routerHelper.routeCreep(creep, creep.memory.source, {visualizePathStyle: {stroke: '#ffaa00'}})\r\n                    }\r\n                }\r\n            }else{\r\n                let source = creep.pos.findClosestByRange(FIND_SOURCES)\r\n                if(creep.harvest(source) === ERR_NOT_IN_RANGE) {\r\n                    routerHelper.routeCreep(creep, source, {visualizePathStyle: {stroke: '#ffaa00'}})\r\n                }\r\n            }\r\n        }\r\n    },\r\n    getNumberOfLoader: (room:Room)=>{\r\n        let structures = room.find(FIND_STRUCTURES, {\r\n            filter: (structure:Tower|Container|Structure) => {\r\n                return structure.structureType === \"tower\" || structure.structureType === \"container\"\r\n            }\r\n        })\r\n        if(room.energyAvailable >= settings.generalSettings.costs.little*2 && _.size(structures) > 0){\r\n            return settings.maxLoader\r\n        }\r\n        return 1\r\n    }\r\n}\r\n\r\nmodule.exports = roleLoader"]}