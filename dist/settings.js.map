{"version":3,"sources":["settings.ts"],"names":["output","require","room","_","map","Game","rooms","settings","level","controller","getSettingsForLevel","Number","isInteger","minHarvester","numberLittleCreeps","numberMediumCreeps","numberBigCreeps","maxBuilder","maxLoader","generalSettings","getGeneralSettings","initDB","memoryClearCounter","newRouteOutdateCounter","roles","harvester","upgrader","builder","loader","sourceproxy","costs","little","medium","big","roomLength","bucketLimit","amountOfLastTimeTicksToSave","module","exports"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,UAAR,CAAb;AACA,IAAIC,OAAOC,EAAEC,GAAF,CAAMC,KAAKC,KAAX,EAAkB,gBAAI;AAAI,WAAOJ,IAAP;AAAY,CAAtC,EAAwC,CAAxC,CAAX;AACA,IAAIK,WAAW;AACXC,WAAON,KAAKO,UAAL,CAAgBD,KADZ;AAEXE,yBAAqB,+BAAA;AACjB,YAAGH,SAASC,KAAT,IAAkB,CAAlB,IAAuB,CAACG,OAAOC,SAAP,CAAiBL,SAASC,KAA1B,CAA3B,EAA4D;AACxD,mBAAO;AACHA,uBAAOD,SAASC,KADb;AAEHK,8BAAc,CAFX;AAGHC,oCAAoB,EAHjB;AAIHC,oCAAoB,CAJjB;AAKHC,iCAAiB,CALd;AAMHC,4BAAY,CANT;AAOHC,2BAAW,CAPR;AAQHC,iCAAiBZ,SAASa,kBAAT;AARd,aAAP;AAUH,SAXD,MAWM,IAAGb,SAASC,KAAT,KAAmB,CAAtB,EAAwB;AAC1B,mBAAO;AACHA,uBAAOD,SAASC,KADb;AAEHK,8BAAc,CAFX;AAGHC,oCAAoB,EAHjB;AAIHC,oCAAoB,CAJjB;AAKHC,iCAAiB,CALd;AAMHC,4BAAY,CANT;AAOHC,2BAAW,CAPR;AAQHC,iCAAiBZ,SAASa,kBAAT;AARd,aAAP;AAUH,SAXK,MAWA,IAAGb,SAASC,KAAT,KAAmB,CAAtB,EAAwB;AAC1B,mBAAO;AACHA,uBAAOD,SAASC,KADb;AAEHK,8BAAc,CAFX;AAGHC,oCAAoB,CAHjB;AAIHC,oCAAoB,EAJjB;AAKHC,iCAAiB,CALd;AAMHC,4BAAY,CANT;AAOHC,2BAAW,CAPR;AAQHC,iCAAiBZ,SAASa,kBAAT;AARd,aAAP;AAUH,SAXK,MAWA,IAAGb,SAASC,KAAT,KAAmB,CAAtB,EAAwB;AAC1B,mBAAO;AACHA,uBAAOD,SAASC,KADb;AAEHK,8BAAc,CAFX;AAGHC,oCAAoB,CAHjB;AAIHC,oCAAoB,CAJjB;AAKHC,iCAAiB,CALd;AAMHC,4BAAY,CANT;AAOHC,2BAAW,CAPR;AAQHC,iCAAiBZ,SAASa,kBAAT;AARd,aAAP;AAUH,SAXK,MAWD;AACD,mBAAM;AACFZ,uBAAOD,SAASC,KADd;AAEFK,8BAAc,CAFZ;AAGFC,oCAAoB,EAHlB;AAIFC,oCAAoB,CAJlB;AAKFC,iCAAiB,CALf;AAMFC,4BAAY,CANV;AAOFC,2BAAW,CAPT;AAQFC,iCAAiBZ,SAASa,kBAAT;AARf,aAAN;AAUH;AACJ,KA3DU;AA4DXA,wBAAoB,8BAAA;AAChB,eAAO;AACHC,oBAAQ,KADL;AAEHC,gCAAoB,EAFjB;AAGHC,oCAAwB,CAHrB;AAIHC,mBAAM;AACFC,2BAAW,WADT;AAEFC,0BAAU,UAFR;AAGFC,yBAAS,SAHP;AAIFC,wBAAQ,QAJN;AAKFC,6BAAa;AALX,aAJH;AAWHC,mBAAM;AACFC,wBAAO,GADL;AAEFC,wBAAQ,GAFN;AAGFC,qBAAK;AAHH,aAXH;AAgBHC,wBAAY,EAhBT;AAiBHC,yBAAa,IAjBV;AAkBHC,yCAA6B;AAlB1B,SAAP;AAoBH;AAjFU,CAAf;AAoFAC,OAAOC,OAAP,GAAiB/B,QAAjB","file":"settings.js","sourcesContent":["let output = require('./output')\r\nlet room = _.map(Game.rooms, room =>{return room})[0]\r\nlet settings = {\r\n    level: room.controller.level,\r\n    getSettingsForLevel: ()=>{\r\n        if(settings.level <= 1 || !Number.isInteger(settings.level)){\r\n            return {\r\n                level: settings.level,\r\n                minHarvester: 5,\r\n                numberLittleCreeps: 10,\r\n                numberMediumCreeps: 0,\r\n                numberBigCreeps: 0,\r\n                maxBuilder: 1,\r\n                maxLoader: 0,\r\n                generalSettings: settings.getGeneralSettings(),\r\n            }\r\n        }else if(settings.level === 2){\r\n            return {\r\n                level: settings.level,\r\n                minHarvester: 5,\r\n                numberLittleCreeps: 10,\r\n                numberMediumCreeps: 5,\r\n                numberBigCreeps: 0,\r\n                maxBuilder: 2,\r\n                maxLoader: 0,\r\n                generalSettings: settings.getGeneralSettings(),\r\n            }\r\n        }else if(settings.level === 3){\r\n            return {\r\n                level: settings.level,\r\n                minHarvester: 5,\r\n                numberLittleCreeps: 1,\r\n                numberMediumCreeps: 10,\r\n                numberBigCreeps: 4,\r\n                maxBuilder: 2,\r\n                maxLoader: 2,\r\n                generalSettings: settings.getGeneralSettings(),\r\n            }\r\n        }else if(settings.level === 4){\r\n            return {\r\n                level: settings.level,\r\n                minHarvester: 5,\r\n                numberLittleCreeps: 1,\r\n                numberMediumCreeps: 7,\r\n                numberBigCreeps: 7,\r\n                maxBuilder: 2,\r\n                maxLoader: 2,\r\n                generalSettings: settings.getGeneralSettings(),\r\n            }\r\n        }else{\r\n            return{\r\n                level: settings.level,\r\n                minHarvester: 5,\r\n                numberLittleCreeps: 10,\r\n                numberMediumCreeps: 7,\r\n                numberBigCreeps: 7,\r\n                maxBuilder: 2,\r\n                maxLoader: 2,\r\n                generalSettings: settings.getGeneralSettings(),\r\n            }\r\n        }\r\n    },\r\n    getGeneralSettings: () =>{\r\n        return {\r\n            initDB: false,\r\n            memoryClearCounter: 10,\r\n            newRouteOutdateCounter: 5,\r\n            roles:{\r\n                harvester: \"harvester\",\r\n                upgrader: \"upgrader\",\r\n                builder: \"builder\",\r\n                loader: \"loader\",\r\n                sourceproxy: \"sourceproxy\",\r\n            },\r\n            costs:{\r\n                little:300,\r\n                medium: 550,\r\n                big: 800,\r\n            },\r\n            roomLength: 50,\r\n            bucketLimit: 5000,\r\n            amountOfLastTimeTicksToSave: 5,\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = settings"]}