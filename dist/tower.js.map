{"version":3,"sources":["tower.ts"],"names":["output","require","towerHelper","run","tower","room","closestHostile","pos","findClosestByRange","FIND_HOSTILE_CREEPS","attack","damagedContainers","find","FIND_STRUCTURES","filter","structure","structureType","hits","hitsMax","_","size","sortByOrder","repair","damagedRamparts","damagedStructures","getTower","towers","map","module","exports"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,UAAR,CAAb;AACA,IAAIC,cAAc;AACdC,SAAK,aAACC,KAAD,EAAeC,IAAf,EAAyB;AAC1B,YAAIC,iBAAiBF,MAAMG,GAAN,CAAUC,kBAAV,CAA6BC,mBAA7B,CAArB;AACA,YAAGH,cAAH,EAAmB;AACfF,kBAAMM,MAAN,CAAaJ,cAAb;AACH,SAFD,MAEK;AACD,gBAAIK,oBAAoBN,KAAKO,IAAL,CAAUC,eAAV,EAA2B;AAC/CC,wBAAQ,gBAACC,SAAD;AAAA,2BAAsCA,UAAUC,aAAV,KAA4B,WAA5B,IAA2CD,UAAUE,IAAV,GAAiBF,UAAUG,OAA5G;AAAA;AADuC,aAA3B,CAAxB;AAIA,gBAAGC,EAAEC,IAAF,CAAOT,iBAAP,IAA4B,CAA/B,EAAiC;AAC7BA,oCAAoBQ,EAAEE,WAAF,CAAcV,iBAAd,EAAiC,CAAC,MAAD,EAAS,SAAT,CAAjC,EAAsD,CAAC,KAAD,EAAQ,KAAR,CAAtD,CAApB;AACAP,sBAAMkB,MAAN,CAAaX,kBAAkB,CAAlB,CAAb;AACH,aAHD,MAGK;AACD,oBAAIY,kBAAkBlB,KAAKO,IAAL,CAAUC,eAAV,EAA2B;AAC7CC,4BAAQ,gBAACC,SAAD;AAAA,+BAAoCA,UAAUC,aAAV,KAA4B,SAA5B,IAAyCD,UAAUE,IAAV,GAAiBF,UAAUG,OAAxG;AAAA;AADqC,iBAA3B,CAAtB;AAGA,oBAAGC,EAAEC,IAAF,CAAOG,eAAP,IAA0B,CAA7B,EAA+B;AAC3BA,sCAAkBJ,EAAEE,WAAF,CAAcE,eAAd,EAA+B,CAAC,MAAD,EAAS,SAAT,CAA/B,EAAoD,CAAC,KAAD,EAAQ,KAAR,CAApD,CAAlB;AACAnB,0BAAMkB,MAAN,CAAaC,gBAAgB,CAAhB,CAAb;AACH,iBAHD,MAGK;AACD,wBAAIC,oBAAoBnB,KAAKO,IAAL,CAAUC,eAAV,EAA2B;AAC/CC,gCAAQ,gBAACC,SAAD;AAAA,mCAA0BA,UAAUE,IAAV,GAAiBF,UAAUG,OAArD;AAAA;AADuC,qBAA3B,CAAxB;AAGA,wBAAGC,EAAEC,IAAF,CAAOI,iBAAP,IAA4B,CAA/B,EAAiC;AAC7BA,4CAAoBL,EAAEE,WAAF,CAAcG,iBAAd,EAAiC,CAAC,MAAD,EAAS,SAAT,CAAjC,EAAsD,CAAC,KAAD,EAAQ,KAAR,CAAtD,CAApB;AACApB,8BAAMkB,MAAN,CAAaE,kBAAkB,CAAlB,CAAb;AACH;AACJ;AACJ;AACJ;AACJ,KA/Ba;AAgCdC,cAAU,kBAACpB,IAAD,EAAW;AACjB,YAAIqB,SAASrB,KAAKO,IAAL,CAAUC,eAAV,EAA2B,EAACC,QAAQ,gBAACC,SAAD,EAAiB;AAAM,uBAAOA,UAAUC,aAAV,KAA4B,OAAnC;AAA2C,aAA3E,EAA3B,CAAb;AACAU,eAAOC,GAAP,CAAW,UAACvB,KAAD,EAAsB;AAAKF,wBAAYC,GAAZ,CAAgBC,KAAhB,EAAuBC,IAAvB;AAA6B,SAAnE;AACH;AAnCa,CAAlB;AAsCAuB,OAAOC,OAAP,GAAiB3B,WAAjB","file":"tower.js","sourcesContent":["let output = require('./output')\r\nlet towerHelper = {\r\n    run: (tower: Tower, room: Room)=>{\r\n        let closestHostile = tower.pos.findClosestByRange(FIND_HOSTILE_CREEPS)\r\n        if(closestHostile) {\r\n            tower.attack(closestHostile)\r\n        }else{\r\n            let damagedContainers = room.find(FIND_STRUCTURES, {\r\n                filter: (structure: Container | Structure) => structure.structureType === \"container\" && structure.hits < structure.hitsMax\r\n            })\r\n\r\n            if(_.size(damagedContainers) > 0){\r\n                damagedContainers = _.sortByOrder(damagedContainers, ['hits', 'hitsMax'], ['asc', 'asc'])\r\n                tower.repair(damagedContainers[0])\r\n            }else{\r\n                let damagedRamparts = room.find(FIND_STRUCTURES, {\r\n                    filter: (structure: Rampart | Structure) => structure.structureType === \"rampart\" && structure.hits < structure.hitsMax\r\n                })\r\n                if(_.size(damagedRamparts) > 0){\r\n                    damagedRamparts = _.sortByOrder(damagedRamparts, ['hits', 'hitsMax'], ['asc', 'asc'])\r\n                    tower.repair(damagedRamparts[0])\r\n                }else{\r\n                    let damagedStructures = room.find(FIND_STRUCTURES, {\r\n                        filter: (structure: Structure) => structure.hits < structure.hitsMax\r\n                    })\r\n                    if(_.size(damagedStructures) > 0){\r\n                        damagedStructures = _.sortByOrder(damagedStructures, ['hits', 'hitsMax'], ['asc', 'asc'])\r\n                        tower.repair(damagedStructures[0])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    getTower: (room: Room)=>{\r\n        let towers = room.find(FIND_STRUCTURES, {filter: (structure: Tower) => {return structure.structureType === \"tower\"}})\r\n        towers.map((tower:Tower|Structure) =>{towerHelper.run(tower, room)})\r\n    },\r\n}\r\n\r\nmodule.exports = towerHelper"]}