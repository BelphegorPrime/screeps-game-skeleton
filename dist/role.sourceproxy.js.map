{"version":3,"sources":["role.sourceproxy.ts"],"names":["output","require","routerHelper","roleSourceProxy","run","creep","carry","energy","carryCapacity","container","pos","findClosestByRange","FIND_STRUCTURES","filter","structure","structureType","STRUCTURE_CONTAINER","store","RESOURCE_ENERGY","storeCapacity","transfer","ERR_NOT_IN_RANGE","routeCreep","visualizePathStyle","stroke","target","STRUCTURE_EXTENSION","STRUCTURE_SPAWN","energyCapacity","harvest","memory","source","module","exports"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,UAAR,CAAb;AACA,IAAIC,eAAeD,QAAQ,UAAR,CAAnB;AACA,IAAIE,kBAAkB;AAClBC,SAAK,aAACC,KAAD,EAAM;AACP,YAAGA,MAAMC,KAAN,CAAYC,MAAZ,KAAuBF,MAAMG,aAA7B,IAA8CH,MAAMC,KAAN,CAAYC,MAAZ,IAAsB,EAAvE,EAA2E;AACvE,gBAAIE,YAAYJ,MAAMK,GAAN,CAAUC,kBAAV,CAA6BC,eAA7B,EAA8C;AAC1DC,wBAAQ,gBAASC,SAAT,EAAkB;AACtB,2BAAOA,UAAUC,aAAV,KAA4BC,mBAA5B,IAAmDF,UAAUG,KAAV,CAAgBC,eAAhB,IAAmCJ,UAAUK,aAAvG;AACH;AAHyD,aAA9C,CAAhB;AAKA,gBAAGV,cAAc,IAAjB,EAAsB;AAClB,oBAAGJ,MAAMe,QAAN,CAAeX,SAAf,EAA0BS,eAA1B,MAA+CG,gBAAlD,EAAoE;AAChEnB,iCAAaoB,UAAb,CAAwBjB,KAAxB,EAA+BI,SAA/B,EAA0C,EAACc,oBAAoB,EAACC,QAAQ,SAAT,EAArB,EAA1C;AACH;AACJ,aAJD,MAIK;AACD,oBAAIC,SAASpB,MAAMK,GAAN,CAAUC,kBAAV,CAA6BC,eAA7B,EAA8C;AACvDC,4BAAQ,gBAACC,SAAD,EAAU;AACd,+BAAO,CAACA,UAAUC,aAAV,KAA4BW,mBAA5B,IACJZ,UAAUC,aAAV,KAA4BY,eADzB,KAEFb,UAAUP,MAAV,GAAmBO,UAAUc,cAFlC;AAGH;AALsD,iBAA9C,CAAb;AAOA,oBAAGH,WAAS,IAAZ,EAAiB;AACb,wBAAGpB,MAAMe,QAAN,CAAeK,MAAf,EAAuBP,eAAvB,MAA4CG,gBAA/C,EAAiE;AAC7DnB,qCAAaoB,UAAb,CAAwBjB,KAAxB,EAA+BoB,MAA/B,EAAuC,EAACF,oBAAoB,EAACC,QAAQ,SAAT,EAArB,EAAvC;AACH;AACJ;AACJ;AACJ,SAxBD,MAwBO;AACH,gBAAGnB,MAAMwB,OAAN,CAAcxB,MAAMyB,MAAN,CAAaC,MAA3B,MAAuCV,gBAA1C,EAA4D;AACxDnB,6BAAaoB,UAAb,CAAwBjB,KAAxB,EAA+BA,MAAMyB,MAAN,CAAaC,MAA5C,EAAoD,EAACR,oBAAoB,EAACC,QAAQ,SAAT,EAArB,EAApD;AACH;AACJ;AACJ;AA/BiB,CAAtB;AAkCAQ,OAAOC,OAAP,GAAiB9B,eAAjB","file":"role.sourceproxy.js","sourcesContent":["let output = require('./output')\r\nlet routerHelper = require('./router')\r\nlet roleSourceProxy = {\r\n    run: (creep) =>{\r\n        if(creep.carry.energy === creep.carryCapacity && creep.carry.energy >= 50) {\r\n            let container = creep.pos.findClosestByRange(FIND_STRUCTURES, {\r\n                filter: function(structure) {\r\n                    return structure.structureType === STRUCTURE_CONTAINER && structure.store[RESOURCE_ENERGY] < structure.storeCapacity\r\n                }\r\n            });\r\n            if(container !== null){\r\n                if(creep.transfer(container, RESOURCE_ENERGY) === ERR_NOT_IN_RANGE) {\r\n                    routerHelper.routeCreep(creep, container, {visualizePathStyle: {stroke: '#ffffff'}})\r\n                }\r\n            }else{\r\n                let target = creep.pos.findClosestByRange(FIND_STRUCTURES, {\r\n                    filter: (structure) => {\r\n                        return (structure.structureType === STRUCTURE_EXTENSION ||\r\n                            structure.structureType === STRUCTURE_SPAWN) &&\r\n                            (structure.energy < structure.energyCapacity)\r\n                    }\r\n                })\r\n                if(target!==null){\r\n                    if(creep.transfer(target, RESOURCE_ENERGY) === ERR_NOT_IN_RANGE) {\r\n                        routerHelper.routeCreep(creep, target, {visualizePathStyle: {stroke: '#ffffff'}})\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if(creep.harvest(creep.memory.source) === ERR_NOT_IN_RANGE) {\r\n                routerHelper.routeCreep(creep, creep.memory.source, {visualizePathStyle: {stroke: '#ffaa00'}})\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = roleSourceProxy"]}