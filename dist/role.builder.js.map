{"version":3,"sources":["role.builder.ts"],"names":["output","require","settings","getSettingsForLevel","routerHelper","roleBuilder","run","creep","memory","building","carry","energy","say","carryCapacity","target","pos","findClosestByRange","FIND_CONSTRUCTION_SITES","build","ERR_NOT_IN_RANGE","routeCreep","visualizePathStyle","stroke","_","size","room","containerToGetFrom","map","container","realContainer","find","FIND_STRUCTURES","filter","structure","structureType","x","y","withdraw","RESOURCE_ENERGY","source","store","harvest","fallbackSource","getNumberOfBuilder","constructionSites","numberOfBuilder","amountOfConstructionSites","maxBuilder","module","exports"],"mappings":"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","file":"role.builder.js","sourcesContent":["let output = require('./output')\r\nlet settings = require('./settings').getSettingsForLevel()\r\nlet routerHelper = require('./router')\r\nlet roleBuilder = {\r\n\r\n    run: (creep:Creep) =>{\r\n        if(creep.memory.building && creep.carry.energy === 0) {\r\n            creep.memory.building = false\r\n            creep.say('harvest')\r\n        }\r\n        if(!creep.memory.building && creep.carry.energy === creep.carryCapacity) {\r\n            creep.memory.building = true\r\n            creep.say('build')\r\n        }\r\n\r\n        if(creep.memory.building) {\r\n            let target = creep.pos.findClosestByRange(FIND_CONSTRUCTION_SITES)\r\n            if(target !== null) {\r\n                if(creep.build(target) === ERR_NOT_IN_RANGE) {\r\n                    routerHelper.routeCreep(creep, target, {visualizePathStyle: {stroke: '#ffffff'}})\r\n                }\r\n            }\r\n        } else {\r\n            if(_.size(creep.room.containerToGetFrom) > 0){\r\n                creep.room.containerToGetFrom.map( (container:Container) =>{\r\n                    let realContainer = creep.room.find(FIND_STRUCTURES, {\r\n                        filter: (structure:Container|Structure) => {\r\n                            return structure.structureType === \"container\" &&\r\n                                structure.pos.x === container.pos.x &&\r\n                                structure.pos.y === container.pos.y\r\n                        }\r\n                    })[0]\r\n\r\n                    if(creep.withdraw(realContainer, RESOURCE_ENERGY) === ERR_NOT_IN_RANGE) {\r\n                        routerHelper.routeCreep(creep, realContainer, {visualizePathStyle: {stroke: '#ffffff'}})\r\n                    }\r\n                })\r\n            }else {\r\n                if(creep.memory.source.structureType === \"container\"){\r\n                    if(creep.memory.source.store.energy > 0){\r\n                        if(creep.withdraw(creep.memory.source, RESOURCE_ENERGY) === ERR_NOT_IN_RANGE) {\r\n                            routerHelper.routeCreep(creep, creep.memory.source, {visualizePathStyle: {stroke: '#ffaa00'}})\r\n                        }\r\n                    }else{\r\n                        if(creep.harvest(creep.memory.fallbackSource) === ERR_NOT_IN_RANGE) {\r\n                            routerHelper.routeCreep(creep, creep.memory.fallbackSource, {visualizePathStyle: {stroke: '#ffaa00'}})\r\n                        }\r\n                    }\r\n                }else{\r\n                    if(creep.harvest(creep.memory.source) === ERR_NOT_IN_RANGE) {\r\n                        routerHelper.routeCreep(creep, creep.memory.source, {visualizePathStyle: {stroke: '#ffaa00'}})\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    },\r\n    getNumberOfBuilder: (constructionSites: [ConstructionSite])=>{\r\n        // Set the Amount Of Creeps with the role Builder\r\n        let numberOfBuilder = 1\r\n        let amountOfConstructionSites = _.size(constructionSites)\r\n        if(amountOfConstructionSites > settings.maxBuilder){\r\n            numberOfBuilder = settings.maxBuilder\r\n        }else if(amountOfConstructionSites === 0){\r\n            numberOfBuilder = 0\r\n        }\r\n        return numberOfBuilder\r\n    },\r\n}\r\n\r\nmodule.exports = roleBuilder"]}