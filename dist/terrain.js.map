{"version":3,"sources":["terrain.ts"],"names":["output","require","settings","terrain","read","room","lastTick","Memory","cpu","lastTickTime","_","size","tickBefireLastTick","Game","limit","bucket","getGeneralSettings","bucketLimit","iteration","terrainX","roomLength","data","i","concat","x","y","lookForAt","name","areas","lookAtArea","module","exports"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,UAAR,CAAb;AACA,IAAIC,WAAWD,QAAQ,YAAR,CAAf;AAEA,IAAIE,UAAU;AACVC,UAAM,cAACC,IAAD,EAAK;AACP,YAAIC,WAAWC,OAAOC,GAAP,CAAWC,YAAX,CAAwB,CAAxB,EAA2BC,EAAEC,IAAF,CAAOJ,OAAOC,GAAP,CAAWC,YAAX,CAAwB,CAAxB,CAAP,IAAmC,CAA9D,CAAf;AACA,YAAIG,qBAAqBL,OAAOC,GAAP,CAAWC,YAAX,CAAwB,CAAxB,EAA2BC,EAAEC,IAAF,CAAOJ,OAAOC,GAAP,CAAWC,YAAX,CAAwB,CAAxB,CAAP,IAAmC,CAA9D,CAAzB;AACA,YAAGH,YAAYO,KAAKL,GAAL,CAASM,KAArB,IAA8BF,sBAAsBC,KAAKL,GAAL,CAASM,KAAhE,EAAsE;AAClE;AACA,gBAAGD,KAAKL,GAAL,CAASO,MAAT,GAAkBb,SAASc,kBAAT,GAA8BC,WAAhD,IAA+DX,WAAWO,KAAKL,GAAL,CAASM,KAAtF,EAA4F;AACxF,oBAAII,YAAYX,OAAOY,QAAvB;AACA,oBAAGD,cAAchB,SAASc,kBAAT,GAA8BI,UAA/C,EAA0D;AACtDb,2BAAOY,QAAP,GAAkB,CAAlB;AACAD,gCAAY,CAAZ;AACH;AAED,oBAAIG,OAAO,EAAX;AACA,qBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIpB,SAASc,kBAAT,GAA8BI,UAAlD,EAA8DE,GAA9D,EAAmE;AAC/DD,2BAAO,GAAGE,MAAH,CAAUF,IAAV,EAAgB;AACnBG,2BAAGN,SADgB;AAEnBO,2BAAGH,CAFgB;AAGnBnB,iCAASE,KAAKqB,SAAL,CAAe,SAAf,EAA0BR,SAA1B,EAAqCI,CAArC;AAHU,qBAAhB,CAAP;AAKH;AAEDf,uBAAOJ,OAAP,CAAeE,KAAKsB,IAApB,EAA0BT,SAA1B,IAAuCG,IAAvC;AACAd,uBAAOqB,KAAP,CAAavB,KAAKsB,IAAlB,IAA0BtB,KAAKwB,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,IAA9B,CAA1B;AACAtB,uBAAOY,QAAP,GAAkBD,YAAU,CAA5B;AACH;AACJ;AAED,eAAOb,IAAP;AACH;AA7BS,CAAd;AAgCAyB,OAAOC,OAAP,GAAiB5B,OAAjB","file":"terrain.js","sourcesContent":["let output = require('./output')\r\nlet settings = require('./settings')\r\n\r\nlet terrain = {\r\n    read: (room)=>{\r\n        let lastTick = Memory.cpu.lastTickTime[0][_.size(Memory.cpu.lastTickTime[0])-1]\r\n        let tickBefireLastTick = Memory.cpu.lastTickTime[0][_.size(Memory.cpu.lastTickTime[0])-2]\r\n        if(lastTick >= Game.cpu.limit || tickBefireLastTick >= Game.cpu.limit){\r\n            // output.writeToDebug(\"LastTick with value \"+lastTick+\" or value \"+tickBefireLastTick+\" are greater or equal to \"+Game.cpu.limit)\r\n            if(Game.cpu.bucket > settings.getGeneralSettings().bucketLimit && lastTick < Game.cpu.limit){\r\n                let iteration = Memory.terrainX\r\n                if(iteration === settings.getGeneralSettings().roomLength){\r\n                    Memory.terrainX = 0\r\n                    iteration = 0\r\n                }\r\n\r\n                let data = []\r\n                for (let i = 0; i < settings.getGeneralSettings().roomLength; i++) {\r\n                    data = [].concat(data, {\r\n                        x: iteration,\r\n                        y: i,\r\n                        terrain: room.lookForAt('terrain', iteration, i),\r\n                    })\r\n                }\r\n\r\n                Memory.terrain[room.name][iteration] = data\r\n                Memory.areas[room.name] = room.lookAtArea(0, 0, 49, 49, true)\r\n                Memory.terrainX = iteration+1\r\n            }\r\n        }\r\n\r\n        return room\r\n    }\r\n}\r\n\r\nmodule.exports = terrain"]}