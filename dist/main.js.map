{"version":3,"sources":["main.ts"],"names":["roleHarvester","require","roleUpgrader","roleBuilder","roleLoader","roleSourceProxy","room","creepsHelper","memoryHelper","output","settings","getSettingsForLevel","module","exports","loop","subTimeStart","Game","cpu","getUsed","init","rooms","creeps","_","size","getCreeps","constructionSites","spawnCreeps","spawns","subTimeCreepsRun","map","Memory","enemys","creep","name","run","subTimeCreepRun","memory","role","generalSettings","roles","harvester","upgrader","builder","loader","sourceproxy","durationCreepRun","toFixed","writeToDebug","durationCreepsRun","workTimes","iteration","lengthLastTickTime","amountOfLastTimeTicksToSave","lastTickTime","duration","concat","showCreepRoles","writeCPU","writeLog"],"mappings":"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","file":"main.js","sourcesContent":["// notice to myself: \"lodash version is 3.10.1 :O\"\n\nlet roleHarvester = require('./role.harvester')\nlet roleUpgrader = require('./role.upgrader')\nlet roleBuilder = require('./role.builder')\nlet roleLoader = require('./role.loader')\nlet roleSourceProxy = require('./role.sourceproxy')\n\nlet room = require('./room')\nlet creepsHelper = require('./creeps')\nlet memoryHelper = require('./memory')\n\nlet output = require('./output')\nlet settings = require('./settings').getSettingsForLevel()\n\nmodule.exports.loop = () =>{\n\n    let subTimeStart=Game.cpu.getUsed();\n\n    memoryHelper.init(Game.rooms)\n\n    // Get Roominformations and extend the Room Object\n    Game.rooms = room.init(Game.rooms)\n\n    // Give every small and big Creep its role and source\n    let creeps = []\n    if(_.size(Game.creeps) > 0){\n        creeps = creepsHelper.getCreeps(Game.creeps, Game.rooms, Game.constructionSites)\n    }\n\n    // Create small and big Creeps\n    creepsHelper.spawnCreeps(Game.rooms, Game.spawns, creeps)\n\n    // Execute Commands for Creeper Role\n    let subTimeCreepsRun=Game.cpu.getUsed();\n    _.map(creeps, creep =>{\n        if(Memory.enemys[creep.room.name] > 0){\n            roleLoader.run(creep)\n        }else{\n            let subTimeCreepRun=Game.cpu.getUsed();\n            if(creep.memory.role === settings.generalSettings.roles.harvester ||\n                creep.memory.role === \"harvester\") {\n                roleHarvester.run(creep)\n            }\n            if(creep.memory.role === settings.generalSettings.roles.upgrader ||\n                creep.memory.role === \"upgrader\") {\n                roleUpgrader.run(creep)\n            }\n            if(creep.memory.role === settings.generalSettings.roles.builder ||\n                creep.memory.role === \"builder\") {\n                roleBuilder.run(creep)\n            }\n            if(creep.memory.role === settings.generalSettings.roles.loader ||\n                creep.memory.role === \"loader\"){\n                roleLoader.run(creep)\n            }\n            if(creep.memory.role === settings.generalSettings.roles.sourceproxy ||\n                creep.memory.role === \"sourceproxy\"){\n                roleSourceProxy.run(creep)\n            }\n            let durationCreepRun=(Game.cpu.getUsed()-subTimeCreepRun).toFixed(0);\n            if(durationCreepRun > 1){\n                output.writeToDebug(creep.memory.role+\" WORKTIME TOOK                 \"+durationCreepRun)\n            }\n        }\n    })\n    let durationCreepsRun=(Game.cpu.getUsed()-subTimeCreepsRun).toFixed(0);\n    output.workTimes(\"CREEPS WORKTIME TOOK                 \"+durationCreepsRun)\n\n    // WRITE ACTUAL TICK TO MEMORY\n    let iteration = Memory.cpu.lengthLastTickTime\n    if(iteration >= settings.generalSettings.amountOfLastTimeTicksToSave){\n        Memory.cpu.lengthLastTickTime = 0\n        iteration = 0\n        Memory.cpu.lastTickTime[0]=[Memory.cpu.lastTickTime[0][_.size(Memory.cpu.lastTickTime[0])-1]]\n    }\n    Memory.cpu.lengthLastTickTime = iteration+1\n\n    let duration=(Game.cpu.getUsed()-subTimeStart).toFixed(0);\n    Memory.cpu.lastTickTime[0] = [].concat(Memory.cpu.lastTickTime[0],duration)\n\n    // CONSOLE OUTPUT\n    output.showCreepRoles(Game.rooms, creeps, settings.generalSettings.roles)\n    output.writeCPU(Game.cpu)\n    output.workTimes(\"All dt: \"+duration)\n    output.writeLog()\n}"]}